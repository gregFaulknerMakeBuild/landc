{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/queryelements.ts", "../src/utils/queryElement.ts", "../src/calculators/calculatorConfig.ts", "../src/calculators/calculatorClass.ts", "../src/calculators/index.ts", "../src/components/dialogs.ts", "../src/components/index.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Retrieves the DOM elements based on the provided query and returns them in an array\n */\nexport const queryElements = <T extends HTMLElement | SVGElement>(\n  query: string,\n  parent: Element | Document = document\n): T[] => {\n  const elements = parent.querySelectorAll<T>(query);\n  return elements.length ? [...elements] : [];\n};\n", "/**\n * Retrieves the DOM element based on the provided query and returns them in an array\n */\nexport const queryElement = <T extends HTMLElement>(\n  query: string,\n  parent: Element | Document = document\n): T | undefined => {\n  const element = parent.querySelector<T>(query);\n  return element ?? undefined;\n};\n", "export interface CalculatorConfig {\n  [key: string]: {\n    inputNames: string[];\n    outputNames: string[];\n    outputRepeats?: string[];\n  };\n}\n\nexport const calculatorConfig: CalculatorConfig = {\n  residentialborrowinglimit: {\n    inputNames: ['Applicant1Income', 'Applicant2Income'],\n    outputNames: ['BorrowingAmountLower', 'BorrowingAmountHigher'],\n  },\n  buytoletborrowinglimit: {\n    inputNames: ['RentalIncome'],\n    outputNames: ['BorrowingAmountLower', 'BorrowingAmountHigher'],\n  },\n  mortgagecost: {\n    inputNames: ['RepaymentValue', 'TermYears', 'Rate', 'PaymentType'],\n    outputNames: [\n      'MonthlyPayment',\n      'TotalOverTerm',\n      'CapitalRepayment',\n      'InterestRepayment',\n      'ChartLabels',\n      'ChartDate',\n    ],\n  },\n  houseprice: {\n    inputNames: [\n      'Number',\n      'SubBuildingName',\n      'BuildingName',\n      'DependentStreet',\n      'Street',\n      'Postcode',\n    ],\n    outputNames: [\n      'PropertyValue',\n      'ValuationUpper',\n      'ValuationLower',\n      'MonthlyRental',\n      'MonthlyRentalUpper',\n      'MonthlyRentalLower',\n    ],\n  },\n  loantovalue: {\n    inputNames: ['PropertyValue', 'Type', 'DepositAmount', 'LoanAmount', 'LoanToValue'],\n    outputNames: ['LoanAmount', 'DepositAmount', 'LoanToValue'],\n  },\n  stampduty: {\n    inputNames: ['PurchasePrice', 'Location', 'FirstTimeBuyer', 'SecondProperty'],\n    outputNames: ['BandRate', 'BandValue', 'BandCost', 'TotalCost'],\n    outputRepeats: ['StampDutyData'],\n  },\n};\n\n// export interface OverpaymentRequest {\n//   url: 'https://www.landc.co.uk/calculators/mortgage-overpayment-calculator/';\n//   calculator: 'overpayment';\n//   inputNames: {\n//     LoanAmount: number; // min: 5000, max: 10000000, step: 1000, value: 125000\n//     Rate: number; // min: 0.1, max: 20, step: 0.05, value: 3\n//     Term: number; // min: 1, max: 40, step: 1, value: 25\n//     LoanType: 'R' | 'I';\n//     OverpaymentEvents: {\n//       Value: number; // min: 0, max: 10000000, step: 1, value: null\n//       EventDate: Date;\n//     }[];\n//     RegularPayment: number; // min: 0, max: 100000, step: 1, value:\n//     Frequency: 'M' | 'Q' | 'H' | 'A';\n//   };\n//   outputNames: {\n//     ChartLabels: string;\n//     ChartData: string;\n//     ChartData2: string;\n//     OverpayingSaving: number;\n//     OverpayingInterest: number;\n//     OverpayingTerm: string;\n//   };\n// }\n\n// export interface RateChangeRequest {\n//   url: 'https://www.landc.co.uk/calculators/mortgage-interest-rate-calculator/';\n//   calculator: 'ratechange';\n//   inputNames: {\n//     LoanAmount: number; // min: 5000, max: 10000000, step: 1000, value: 125000\n//     CurrentRate: number; // min: 0.1, max: 20, step: 0.05, value: 3\n//     Term: number; // min: 1, max: 40, step: 1, value: 25\n//     ChangeRate: number; // min: -15, max: 15, step: 0.25, value: 0.5\n//     PaymentType: 'R' | 'I';\n//   };\n//   outputNames: {\n//     CurrentPayment: number;\n//     NewPayment: number;\n//   };\n// }\n\n// export interface InterestRequest {\n//   url: 'https://www.landc.co.uk/calculators/interest-calculator/';\n//   calculator: 'interest';\n//   inputNames: {\n//     AmountInvested: number; // min: 0, max: null, step: 1000, value: 0\n//     InterestRate: number; // min: 0, max: null, step: 1, value: 0\n//     TaxStatus: 'B' | 'H' | 'A';\n//   };\n//   outputNames: {\n//     TaxRate: number;\n//     MonthlyInterest: number;\n//   };\n// }\n\n// export interface LifeInsuranceRequest {\n//   url: 'https://www.landc.co.uk/calculators/life-insurance-calculator/';\n//   calculator: 'lifeinsurance';\n//   inputNames: {\n//     Income: number; // min: 0, max: 10000000, step: 500, value: 1000\n//     Spouse: boolean;\n//     ChildAge: number[]; // min: 0, max: 21, step: 1, value: null\n//     University: boolean;\n//     LoanAmount: number; // min: 0, max: 10000000, step: 1000, value: 125000\n//     Rent: number; // min: 0, max: 5000, step: 100, value: 0\n//     TotalLoans: number; // min: 0, max: 200000, step: 100, value: 0\n//     TotalCreditCards: number; // min: 0, max: 200000, step: 100, value: 0\n//     TotalSavings: number; // min: 0, max: 10000000, step: 1000, value: 0\n//     TotalLifeInsurance: number; // min: 0, max: 10000000, step: 100, value: 0\n//     OtherAssets: number; // min: 0, max: 10000000, step: 100, value: 0\n//   };\n//   outputNames: {\n//     IncomeReplacement: number;\n//     ChildrenCover: number;\n//     UniversityCover: number;\n//     HousingCover: number;\n//     Debts: number;\n//     Assets: number;\n//     TotalCoverRequired: number;\n//   };\n// }\n\n// export interface SavingsRequest {\n//   url: 'https://www.landc.co.uk/calculators/savings-calculator/';\n//   calculator: 'savings';\n//   inputNames: {\n//     RequiredAmount: number; // min: 1, max: 10000000, step: 1000, value: null\n//     GrowthRate: number; // min: 0, max: 15, step: 0.05, value: null\n//     DepositAmount: number; // min: 0, max: null, step: 1000, value: null\n//     MonthlyInvestmentAmount: number; // min: 0, max: null, step: 1, value: null\n//     Term: number; // min: 0, max: null, step: 1, value: null\n//   };\n//   outputNames: {\n//     SavingsTermTotal: string;\n//     SavingsTotalPerMonth: number;\n//     ChartLabels: string;\n//     ChartData: string;\n//   };\n// }\n\n// export interface OffsetMortgageRequest {\n//   url: 'https://www.landc.co.uk/calculators/offset-mortgage-calculator/';\n//   calculator: 'offsetmortgage';\n//   inputNames: {\n//     LoanAmount: number; // min: 25000, max: 10000000, step: 1000, value: 125000\n//     Rate: number; // min: 0.1, max: 20, step: 0.05, value: 3\n//     Term: number; // min: 1, max: 40, step: 1, value: 25\n//     Fee: number; // min: 0, max: 10000, step: 50, value: 0\n//     SavingsAmount: number; // min: 0, max: 10000000, step: 1000, value: null\n//     SavingsRate: number; // min: 0.1, max: 20, step: 0.05, value: null\n//     MonthlySavings: number; // min: 0, max: 100000, step: 10, value: null\n//     OffsetRate: number; // min: 0.1, max: 20, step: 0.05, value: 4.74\n//     OffsetFees: number; // min: 0, max: 10000, step: 50, value: 1495.00\n//     CompareTerm: number; // min: 1, max: 40, step: 1, value: 2\n//     TaxStatus: 'B' | 'H' | 'A';\n//   };\n//   outputNames: {\n//     OffsetStandardMonthly: number;\n//     OffsetMonthly: number;\n//     OffsetStandardInterestCost: number;\n//     OffsetInterestCost: number;\n//     OffsetInterestEarned: number;\n//     ChartLabels: string;\n//     ChartData: string;\n//     ChartData2: string;\n//   };\n// }\n\n// export interface BuyToLetTaxChangeRequest {\n//   url: 'https://www.landc.co.uk/calculators/buy-to-let-mortgage-calculator/';\n//   calculator: 'buytolettaxchange';\n//   inputNames: {\n//     RepaymentValue: number; // not on site\n//     Rent: number; // min: 1, max: 100000, step: 1000, value: 1000\n//     Rate: number; // not on site\n//   };\n//   outputNames: {\n//     BTLAnnualRentalIncome: number;\n//     BTLWearAndTear: number;\n//     BTLInterest: number;\n//     BTLTaxChange2016: number;\n//     BTLNetIncome2016: number;\n//     BTLTaxChange2017: number;\n//     BTLNetIncome2017: number;\n//     BTLTaxChange2018: number;\n//     BTLNetIncome2018: number;\n//     BTLTaxChange2019: number;\n//     BTLNetIncome2019: number;\n//     BTLTaxChange2020: number;\n//     BTLNetIncome2020: number;\n//   };\n// }\n\n// export interface BmiRequest {\n//   url: 'https://www.landc.co.uk/calculators/bmi-calculator/';\n//   calculator: 'bmi';\n//   inputNames: {\n//     Height: number; // min: 1, max: 300, step: 10, value: 178\n//     Weight: number; // min: 1, max: null, step: 1, value: 78\n//   };\n//   outputNames: {\n//     Bmi: number;\n//   };\n// }\n\n// export interface CompareRatesRequest {\n//   url: 'https://www.landc.co.uk/calculators/compare-two-rates/';\n//   calculator: 'comparerates';\n//   inputNames: {\n//     PropertyValue: number; // min: 1, max: 10000000, step: 500, value: 250000\n//     LoanAmount: number; // min: 5000, max: 10000000, step: 1000, value: 125000\n//     Term: number; // min: 1, max: 40, step: 1, value: 25\n//     Type: 'R' | 'I';\n//     ComparisonRates: {\n//       Rate: number; // min: 0.1, max: 15, step: 0.05, value: null | 4.99\n//       Fees: number; // min: -10000000, max: 10000000, step: 100, value: null | 850\n//       Type: 'F' | 'V';\n//       SchemeLength: number; // min: 1, max: 480 | 300, step: 12, value: null | 36\n//       ERCAmount: number; // min: 0, max: 100000, step: 100, value: null\n//       ERCTerm: number; // min: 0, max: 300, step: 1, value:\n//       ERCAdd: boolean;\n//       FollowOn: number; // min: 0.1, max: 15, step: 0.05, value: 5.6 | 7\n//     }[];\n//     ComparisonTerm: number; // min: 2, max: 60, step: 12, value: 24\n//     InterestRateEnvironment: 1 | 2 | 3 | 4 | 5 | 6;\n//   };\n//   outputNames: {\n//     CostOfRate1: number;\n//     CostOfRate2: number;\n//     ChartLabels: string;\n//     ChartData: string;\n//     ChartData2: string;\n//   };\n// }\n", "import { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryelements';\n\nimport { calculatorConfig } from './calculatorConfig';\n\n// type InputValues = Record<string, any>;\ntype Input = HTMLInputElement | HTMLSelectElement | HTMLDivElement;\ntype Output = HTMLDivElement | HTMLSpanElement;\n\ntype BasicObject = {\n  [key: string]: string | number;\n};\n\ninterface APIResponse {\n  body: string;\n  endpoint: string;\n  result: { [key: string]: string | number | BasicObject[] };\n}\n\nconst attr = 'data-calc';\nconst API_ENDPOINT = 'https://landc-website.azurewebsites.net/api/calculatorhttptrigger';\n\nexport class Calculator {\n  name: string;\n  component: HTMLDivElement;\n  inputs: Input[];\n  outputs: Output[];\n  outputRepeatTemplates: HTMLDivElement[];\n  outputRepeats: { [key: string]: HTMLElement[] };\n  results: HTMLDivElement;\n  button: HTMLButtonElement;\n  buttonText: HTMLDivElement;\n  buttonLoader: HTMLDivElement;\n  isLoading: boolean;\n  result?: { [key: string]: string | number | BasicObject[] };\n\n  constructor(name: string) {\n    this.name = name;\n    this.component = queryElement(`[${attr}=\"${this.name}\"]`) as HTMLDivElement;\n    this.inputs = queryElements(`[${attr}-input]`, this.component);\n    this.outputs = queryElements(`[${attr}-output]`, this.component);\n    this.outputRepeatTemplates = queryElements(`[${attr}-output-repeat]`, this.component);\n    this.outputRepeats = {};\n    this.results = queryElement(`[${attr}-el=\"results\"]`, this.component) as HTMLDivElement;\n    this.button = queryElement(`[${attr}-el=\"button\"]`, this.component) as HTMLButtonElement;\n    this.buttonText = queryElement(`[${attr}-el=\"button-text\"]`, this.button) as HTMLDivElement;\n    this.buttonLoader = queryElement(`[${attr}-el=\"button-loader\"]`, this.button) as HTMLDivElement;\n    this.isLoading = false;\n  }\n\n  init(): void {\n    console.groupCollapsed(this.name);\n    console.log(this);\n    this.checkInputs(true);\n    this.checkOutputs(true);\n    console.groupEnd();\n\n    this.bindInputEvents();\n  }\n\n  checkInputs(log?: boolean): boolean {\n    const config = calculatorConfig[this.name];\n    if (!config) {\n      console.error(`${this.name}: configuration not found.`);\n      return false;\n    }\n\n    const tableData: { input: string; present: boolean }[] = [];\n    let allPresent = true;\n\n    // check which inputs are/aren't present\n    config.inputNames.forEach((inputName) => {\n      const input = this.inputs.find((input) => input.dataset.calcInput === inputName);\n      tableData.push({\n        input: inputName,\n        present: !!input,\n      });\n\n      if (!input) allPresent = false;\n    });\n\n    if (log) {\n      console.groupCollapsed(`${allPresent ? 'all inputs present' : 'inputs missing'}`);\n      console.table(tableData);\n      console.groupEnd();\n    }\n\n    return allPresent;\n  }\n\n  checkOutputs(log?: boolean): boolean {\n    const config = calculatorConfig[this.name];\n    if (!config) {\n      console.error(`${this.name}: configuration not found.`);\n      return false;\n    }\n\n    const tableData: { output: string; present: boolean }[] = [];\n    let allPresent = true;\n\n    // check which outputs are/aren't present\n    config.outputNames.forEach((outputName) => {\n      const output = this.outputs.find((output) => output.dataset.calcOutput === outputName);\n      tableData.push({\n        output: outputName,\n        present: !!output,\n      });\n\n      if (!output) allPresent = false;\n    });\n\n    if (log) {\n      console.groupCollapsed(`${allPresent ? 'all outputs present' : 'outputs missing'}`);\n      console.table(tableData);\n      console.groupEnd();\n    }\n\n    return allPresent;\n  }\n\n  toggleLoading(success?: boolean): void {\n    this.isLoading = !this.isLoading;\n    if (this.isLoading) {\n      this.buttonText.style.opacity = '0';\n      this.buttonLoader.style.opacity = '1';\n    } else if (success) {\n      this.buttonText.textContent = 'Recalculate';\n      this.buttonText.style.opacity = '1';\n      this.buttonLoader.style.opacity = '0';\n    } else {\n      this.buttonText.textContent = 'Try again...';\n      this.buttonText.style.opacity = '1';\n      this.buttonLoader.style.opacity = '0';\n    }\n  }\n\n  getInputWrapper(input: Input): HTMLElement | undefined {\n    let child: HTMLElement = input,\n      inputWrapper: HTMLElement | undefined;\n\n    while (child) {\n      if (\n        child.parentElement &&\n        child.parentElement.classList &&\n        child.parentElement.classList.contains('calculator-field_component')\n      ) {\n        inputWrapper = child.parentElement;\n        break;\n      } else if (child.parentElement) {\n        child = child.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return inputWrapper;\n  }\n\n  setInputMessage(input: Input, message?: string): void {\n    const inputWrapper = this.getInputWrapper(input);\n    if (!inputWrapper) return;\n\n    const inputMessage = queryElement('.calculator-field_message', inputWrapper);\n    if (!inputMessage) return;\n\n    const { originalMessage } = inputMessage.dataset;\n    if (!originalMessage && inputMessage.textContent) {\n      inputMessage.dataset.originalMessage = inputMessage.textContent;\n    }\n\n    if (message) {\n      inputMessage.textContent = message;\n    } else if (inputMessage.dataset.originalMessage) {\n      inputMessage.textContent = inputMessage.dataset.originalMessage;\n    }\n  }\n\n  validateInput(input: Input): boolean {\n    let isValid = true,\n      error: string | undefined;\n\n    if (input instanceof HTMLInputElement) {\n      const { type } = input;\n      switch (type) {\n        case 'text':\n          isValid = input.checkValidity();\n          error = input.validationMessage;\n        case 'number':\n          const { min, max, value } = input;\n          isValid = Number(value) >= Number(min) && Number(value) <= Number(max);\n          if (isValid) break;\n          if (Number(value) < Number(min)) {\n            error = `Input needs to be greater than ${min}`;\n          } else if (Number(value) > Number(max)) {\n            error = `Input needs to be smaller than ${max}`;\n          }\n      }\n    } else if (input instanceof HTMLSelectElement) {\n      isValid = input.checkValidity();\n      error = input.validationMessage;\n    }\n\n    if (!error) {\n      this.setInputMessage(input);\n    } else {\n      this.setInputMessage(input, error);\n    }\n\n    return isValid;\n  }\n\n  validateInputs(): boolean {\n    return this.inputs.every((input) => {\n      return this.validateInput(input);\n    });\n  }\n\n  getInputValue(input: Input): string | undefined {\n    if (input instanceof HTMLInputElement || input instanceof HTMLSelectElement) {\n      return input.value;\n    }\n  }\n\n  getInputValues(): { [key: string]: string } {\n    const inputValues: { [key: string]: string } = {};\n    this.inputs.forEach((input: Input) => {\n      const { calcInput } = input.dataset;\n      const value = this.getInputValue(input);\n      if (!calcInput || !value) return;\n\n      inputValues[calcInput] = value;\n    });\n\n    return inputValues;\n  }\n\n  bindInputEvents(): void {\n    // validate inputs on value change\n    this.inputs.forEach((input) => {\n      input.addEventListener('change', () => {\n        this.validateInput(input);\n      });\n    });\n\n    // run sequence on button click\n    this.button.addEventListener('click', () => {\n      this.toggleLoading();\n      const isValid = this.validateInputs();\n      const allPresent = this.checkInputs();\n\n      // cancel if inputs are invalid or not all present\n      if (!isValid || !allPresent) {\n        this.toggleLoading(false);\n        return;\n      }\n\n      this.handleAzureRequest();\n    });\n  }\n\n  async handleAzureRequest(): Promise<void> {\n    try {\n      console.groupCollapsed('API Call');\n      console.time('API Request');\n      const result = await this.makeAzureRequest();\n      this.result = result.result;\n      console.timeEnd('API Request');\n      console.log(result);\n      console.groupEnd();\n      this.toggleLoading(true);\n      this.displayResults();\n    } catch (error) {\n      console.error('Error retrieving calculation', error);\n      this.toggleLoading(false);\n    }\n  }\n\n  async makeAzureRequest(): Promise<APIResponse> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    const body = JSON.stringify({ calculator: this.name, input: this.getInputValues() });\n\n    const response = await fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API responded with status ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  displayResults(): void {\n    if (!this.result || this.result === undefined) return;\n\n    this.outputRepeatTemplates.forEach((outputRepeatTemplate) => {\n      // hide the template\n      outputRepeatTemplate.style.display = 'none';\n\n      // get the repeat name\n      const outputRepeatName = outputRepeatTemplate.dataset.calcOutputRepeat;\n      if (!outputRepeatName) return;\n\n      // find and delete any old clones\n      const clonesToDelete = this.outputRepeats[outputRepeatName];\n      if (clonesToDelete) {\n        clonesToDelete.forEach((cloneToDelete) => {\n          cloneToDelete.remove();\n        });\n      }\n\n      // get the data from the result\n      const outputRepeatData = this.result[outputRepeatName];\n\n      // make a list of clones\n      const clones: HTMLElement[] = [];\n      const { parentElement } = outputRepeatTemplate;\n      if (!parentElement) console.error(`No parent element for ${outputRepeatName} elements`);\n\n      // for each item in the array of data\n      outputRepeatData.forEach((item) => {\n        // clone the template\n        const clone = outputRepeatTemplate.cloneNode(true) as HTMLElement;\n\n        // get the outputs within the template and loop through them\n        const outputs = queryElements(`[${attr}-output]`, clone);\n        outputs.forEach((output) => {\n          // get the output name\n          const { calcOutput } = output.dataset;\n          if (!calcOutput) return;\n\n          // assign the relevant data as the output text\n          output.textContent = item[calcOutput];\n        });\n\n        // show the clone and add it to the array of clones\n        clone.style.removeProperty('display');\n        parentElement.appendChild(clone);\n        clones.push(clone);\n      });\n\n      this.outputRepeats[outputRepeatName] = clones;\n    });\n\n    this.outputs.forEach((output) => {\n      const { calcOutput } = output.dataset;\n      if (!calcOutput) return;\n\n      const resultValue = this.result[calcOutput];\n      if (resultValue === 0 || !!resultValue) output.textContent = resultValue.toString();\n    });\n\n    this.results.style.display = 'block';\n  }\n}\n", "/* eslint-disable no-console */\n// import { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryelements';\n\nimport { Calculator } from './calculatorClass';\n\nexport const calculators = () => {\n  console.log('calculators');\n\n  const attr = 'data-calc';\n  const components = queryElements<HTMLDivElement>(`[${attr}]`);\n\n  components.forEach((component) => {\n    const { calc } = component.dataset;\n    if (!calc) return;\n\n    const calculator = new Calculator(calc);\n    calculator.init();\n  });\n};\n", "import { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryelements';\n\nexport const dialogs = () => {\n  // eslint-disable-next-line no-console\n  console.log('dialogs');\n\n  const attr = 'data-dialog';\n  const components = queryElements<HTMLDivElement>(`[${attr}=\"component\"]`);\n\n  components.forEach((component) => {\n    // get the required elemenets\n    const open = queryElement<HTMLButtonElement>(`[${attr}=\"open\"]`, component);\n    const dialog = queryElement<HTMLDialogElement>('dialog', component);\n    const close = queryElement<HTMLButtonElement>(`[${attr}=\"close\"]`, component);\n\n    if (!open || !dialog || !close) return;\n\n    // open the dialog\n    open.addEventListener('click', () => {\n      dialog.showModal();\n    });\n\n    // close the dialog\n    close.addEventListener('click', () => {\n      dialog.close();\n    });\n  });\n};\n", "import { dialogs } from './dialogs';\n\nexport const components = () => {\n  // eslint-disable-next-line no-console\n  console.log('components');\n\n  dialogs();\n};\n", "import { calculators } from './calculators';\nimport { components } from './components';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  components();\n  calculators();\n});\n"],
  "mappings": "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",
  "names": ["input", "output", "attr", "components", "attr", "components"]
}
